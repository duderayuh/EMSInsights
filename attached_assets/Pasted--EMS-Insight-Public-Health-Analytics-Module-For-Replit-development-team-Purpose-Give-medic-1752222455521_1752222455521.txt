📊 EMS-Insight Public Health Analytics Module
👤 For: Replit development team
🧠 Purpose: Give medical directors and analysts meaningful, actionable insights using only the Chief Complaint field and minimal resources.
🧱 1. MODULE STRUCTURE

Build a backend analytics service as a new module inside the EMS-Insight backend. It should expose the following:
Endpoints:

    /api/analytics/summary: high-level public health summary

    /api/analytics/spikes: spike detection per chief complaint

    /api/analytics/geoclusters: location-based call clusters

    /api/analytics/ai-insight: medical director-style AI insight generation

You may implement these in analytics.routes.ts, with services in analytics.service.ts.
🗂 2. DATABASE QUERIES (pgvector + SQL)

Write PostgreSQL queries to support the following:
A. Chief Complaint Trend Extraction

    Query: count of calls by chief_complaint per day, for last 7/30/90 days

    Group By: DATE_TRUNC('day', radio_timestamp), chief_complaint

B. Recent Clusters by Location

    Query: calls in past 24 hours grouped by chief_complaint, with lat/lon

    Use: For plotting clusters of environmental, overdose, gunshot, OB calls

C. Spike Detection

For a given complaint (e.g. “Overdose”), calculate:

    Mean + standard deviation over past 30 days

    If count in last 24 hours > (mean + 2 std dev), flag it

    Implement z-score method to flag abnormal increases

🤖 3. AI INSIGHT GENERATION (Optional but valuable)
A. Prompt Whisper + OpenAI (or Claude)

    Summarize trends in plain English

    Use this system prompt:

        “You are an EMS Medical Director reviewing public health trends. Analyze the recent call data and summarize any spikes, clusters, or operational concerns using your clinical and public health judgment.”

B. What to feed the AI:

    Aggregated counts of top 10 chief complaints in past 7 days

    Any spike alerts

    Zip codes with repeated calls for same complaint

C. Expected output (display on dashboard):

    Paragraph summary with:

        “We are seeing a sharp increase in overdose calls clustered around ZIP 46203...”

        “Environmental-related calls are elevated over historical baseline and may indicate heat illness rise…”

🗺 4. MAPPING & GEOHEATLAYERS (Frontend)

Use Google Maps or Leaflet to overlay:

    Recent overdose, OB/Childbirth, environmental, and gunshot calls

    Use color-coded clustering

    Provide filter to show:

        “Overdose hot zones (24h)”

        “Environmental calls in heatwave”

        “Gunshot wounds last 7 days”

📊 5. UI DASHBOARD DESIGN

Create a new tab or panel on EMS-Insight called “🧠 Public Health Analytics”

Dashboard sections:

    Call Volume Trends (line chart): Top 10 complaints by daily frequency

    Spike Alerts (cards or table):

        “Overdose ↑ 145%”

        “Environmental ↑ 88%”

    Geoclusters Map: Heatmap of overdose, OB, environmental calls

    AI Summary (text block): Insight paragraph generated by AI model

Add filters:

    Date range: 1 day, 7 days, 30 days

    Complaint type: Overdose, OB, Environmental, Gunshot, Sick Person

🔬 6. IMPLEMENTATION SCOPE (MVP PRIORITIES)

Focus first on these five high-impact complaints:
Public Health Focus	Chief Complaint Keywords
Opioid Crisis	Overdose, Overdose B, Overdose C
Heat Exposure	Environmental, Unconscious Person, Sick Person
Behavioral Health	Mental/Emotional (A/B), Sick Person C
Injury Surveillance	Gunshot, Bleeding, Vehicle Accident
OB Emergencies	OB/Childbirth, OB/Childbirth B, Bleeding
📦 7. OPTIONAL: Background Cron Jobs

Implement periodic analytics workers:

    Daily (midnight):

        Update trend datasets

        Recalculate z-score spike alerts

        Store AI-generated summary

Use node-cron or Postgres jobs if needed.
⚙️ 8. CONFIGURATION & ENVIRONMENT

    Add .env support for AI provider keys (OpenAI or Claude)

    Keep the AI service optional — disable with a config flag

    Logs should be written with timestamps and handled through existing log pipeline

🧪 9. QA AND TESTING

Create test datasets with known spikes for:

    Overdose

    Heat illness (Environmental)

    Gunshot wounds
    Verify:

    Spike detection fires correctly

    AI summary references true events

    Map clusters render accurately

📈 10. FUTURE EXPANSION (After MVP)

    Add age/sex stratification if data becomes available

    Add patient outcome prediction (e.g., CPR survival) with AI modeling

    Integrate weather APIs for automatic environmental alerts

    Provide CSV/JSON export for public health partners